=begin
#Web API Swagger specification

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for AsposeDiagramCloud::DiagramFileApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DiagramFileApi' do
  before do
    # run before each test
     # run before each test
     if $access_token == nil then
      conf = AsposeDiagramCloud::Configuration.new
      conf.base_path = ""
      instance = AsposeDiagramCloud::OAuthApi.new(AsposeDiagramCloud::ApiClient.new(conf))
      $access_token = instance.o_auth_post($grant_type,$client_id,$client_secret).access_token
  end

  conf = AsposeDiagramCloud::Configuration.new
  conf.access_token = $access_token	
  client = AsposeDiagramCloud::ApiClient.new(conf)
  client.default_headers["Authorization"] ="Bearer " + $access_token
    @instance = AsposeDiagramCloud::DiagramFileApi.new(client)
  end

  after do
    # run after each test
  end

  describe 'test an instance of DiagramFileApi' do
    it 'should create an instance of DiagramFileApi' do
      expect(@instance).to be_instance_of(AsposeDiagramCloud::DiagramFileApi)
    end
  end

  # unit tests for diagram_file_get_diagram
  # Read document info or export.
  # 
  # @param name The document name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :format The exported file format.
  # @option opts [String] :folder The document folder.
  # @option opts [String] :storage storage name.
  # @return [File]
  describe 'diagram_file_get_diagram test' do
    it "should work" do
      name = 'file_get_1.vdx'
      folder = $TEMPFOLDER
      format="pdf"
      @instance.diagram_file_get_diagram(name,  {:name=>name, :format=>format, :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for diagram_file_post_save_as
  # Convert document and save result to storage.
  # 
  # @param name The document name.
  # @param [Hash] opts the optional parameters
  # @option opts [FileFormatRequest] :format Save format.
  # @option opts [String] :newfilename The new file name.
  # @option opts [String] :folder The document folder.
  # @option opts [BOOLEAN] :is_overwrite If true overwrite the same name file.The default value is false.
  # @option opts [String] :storage storage name.
  # @return [SaveResponse]
  describe 'diagram_file_post_save_as test' do
    it "should work" do
      name = 'file_get_1.vdx'
      folder = $TEMPFOLDER
      is_overwrite=true
      format=AsposeDiagramCloud::FileFormatRequest.new({:Format=>"pdf"})
      newfilename = "file_saveas_ruby.pdf";

      @instance.diagram_file_post_save_as(name,  {:name=>name, :is_overwrite=>is_overwrite, :folder=>folder,:format=>format,:newfilename=>newfilename})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for diagram_file_put_create
  # Create new diagram and save result to storage.
  # 
  # @param name The new document name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder The new document folder.
  # @option opts [BOOLEAN] :is_overwrite If true overwrite the same name file.The default value is false.
  # @option opts [String] :storage storage name.
  # @return [SaaSposeResponse]
  describe 'diagram_file_put_create test' do
    it "should work" do
      name = 'file_create_ruby.vdx'
      folder = $TEMPFOLDER
      is_overwrite=true
      @instance.diagram_file_put_create(name,  {:name=>name, :is_overwrite=>is_overwrite, :folder=>folder})
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for diagram_file_put_upload
  # Upload file and save result to storage.
  # 
  # @param name The document name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder The document folder.
  # @option opts [BOOLEAN] :is_overwrite If true overwrite the same name file.The default value is false.
  # @option opts [String] :storage storage name.
  # @return [SaaSposeResponse]
  describe 'diagram_file_put_upload test' do
    it "should work" do
      #use aspose-storage-cloud
      #https://github.com/aspose-storage-cloud/aspose-storage-cloud-ruby 
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
