=begin
#Aspose.Diagram Cloud API Reference

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 3.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end
#rspec spec/api/test_convert_spec.rb

require 'spec_helper'
require 'json'

# Unit tests for AsposeDiagramCloud::DiagramApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DiagramApi' do
  before do
    # run before each test
    #@instance = AsposeDiagramCloud::DiagramApi.new($grant_type,$client_id,$client_secret) 
  end

  after do
    # run after each test
  end

  describe 'test an instance of DiagramApi' do
    it 'should create an instance of DiagramApi' do
      expect($diagramApi).to be_instance_of(AsposeDiagramCloud::DiagramApi)
    end
  end

  describe 'test upload file' do
    it 'should upload file' do
      file=::File.open(File.expand_path($localtestFile),"r") {|io| io.read(io.size) }
      result=$storageApi.upload_file($storageTestFOLDER+"/FileUpload.vdx",file)
      expect(result.uploaded).not_to be_empty
    end
  end

  # unit tests for convert_document
  # Converts document from the request&#39;s content to the specified format.
  # 
  # @param name Download document name.
  # @param file File to upload
  # @param [Hash] opts the optional parameters
  # @option opts [String] :source_filename Source document name.
  # @return [File]
  describe 'convert_document test' do
    it "should work" do
      file=::File.open(File.expand_path($localtestFile),"r") {|io| io.read(io.size) }
      result=$diagramApi.convert_document("Convert.pdf",file,{:source_filename=>"FileUpload.vdx"})
      #print(result.size)
      expect(result.size).to  be > 0
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_new
  # Create Empty file into the specified format.
  # 
  # @param name The document name.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder The document folder.
  # @option opts [BOOLEAN] :is_overwrite If true overwrite the same name file.The default value is false 
  # @return [CreateNewResponse]
  describe 'create_new test' do
    it "should work" do
      name = 'file_create_ruby.vdx'
      folder = $storageTestFOLDER
      is_overwrite=true
      result=$diagramApi.create_new(name,  {:name=>name, :is_overwrite=>is_overwrite, :folder=>folder})
      print(result)
      expect(result.created).not_to be_empty
      #assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_file_with_format
  # Exports the document into the specified format.
  # 
  # @param name The document name.
  # @param format The destination format.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Original document folder.
  # @return [File]
  describe 'download_file_with_format test' do
    it "should work" do
      folder = $storageTestFOLDER
      result=$diagramApi.download_file_with_format("FileUpload.vdx","png", {:folder=>folder})
      expect(result.size).to  be > 0
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_as
  # Converts document to destination format with detailed settings and saves result to storage.
  # 
  # @param name Original document name.
  # @param save_options_request Save options.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :folder Original document folder.
  # @option opts [BOOLEAN] :is_overwrite If true overwrite the same name file.The default value is false 
  # @return [SaveAsResponse]
  describe 'save_as test' do
    it "should work" do
      folder =$storageTestFOLDER
      is_overwrite = true
     
      save_as_request=AsposeDiagramCloud::SaveOptionsRequest.new
      save_as_request.file_name="FileSaveAs.pdf"
      save_as_request.folder=folder

      result=$diagramApi.save_as("FileUpload.vdx",save_as_request,{:is_overwrite=>is_overwrite, :folder=>folder})
      expect(result.saved_file).not_to be_empty
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'save_as pdf test' do
    it "should work" do
      folder =$storageTestFOLDER
      is_overwrite = true
     
      save_as_request=AsposeDiagramCloud::SaveOptionsRequest.new
      save_as_request.file_name="FileSaveAs.pdf"
      save_as_request.folder=folder

      save_options=AsposeDiagramCloud::PdfSaveOptions.new
      save_options.is_export_comments=true
      save_options.jpeg_quality=100

      save_as_request.save_options=save_options

      result=$diagramApi.save_as("FileUpload.vdx",save_as_request,{:is_overwrite=>is_overwrite, :folder=>folder})
      expect(result.saved_file).not_to be_empty
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'save_as png test' do
    it "should work" do
      folder =$storageTestFOLDER
      is_overwrite = true
     
      save_as_request=AsposeDiagramCloud::SaveOptionsRequest.new
      save_as_request.file_name="FileSaveAs.png"
      save_as_request.folder=folder

      save_options=AsposeDiagramCloud::ImageSaveOptions.new
      save_options.is_export_comments=true
      save_options.jpeg_quality=100
      
      save_as_request.save_options=save_options

      result=$diagramApi.save_as("FileUpload.vdx",save_as_request,{:is_overwrite=>is_overwrite, :folder=>folder})
      expect(result.saved_file).not_to be_empty
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'save_as bmp test' do
    it "should work" do
      folder =$storageTestFOLDER
      is_overwrite = true
     
      save_as_request=AsposeDiagramCloud::SaveOptionsRequest.new
      save_as_request.file_name="FileSaveAs.bmp"
      save_as_request.folder=folder

      save_options=AsposeDiagramCloud::ImageSaveOptions.new
      save_options.is_export_comments=true
      save_options.jpeg_quality=100
      
      save_as_request.save_options=save_options

      result=$diagramApi.save_as("FileUpload.vdx",save_as_request,{:is_overwrite=>is_overwrite, :folder=>folder})
      expect(result.saved_file).not_to be_empty
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'save_as vssx test' do
    it "should work" do
      folder =$storageTestFOLDER
      is_overwrite = true
     
      save_as_request=AsposeDiagramCloud::SaveOptionsRequest.new
      save_as_request.file_name="FileSaveAs.vssx"
      save_as_request.folder=folder

      save_options=AsposeDiagramCloud::DiagramSaveOptions.new
      save_options.default_font="Times New Roman"
      
      save_as_request.save_options=save_options

      result=$diagramApi.save_as("FileUpload.vdx",save_as_request,{:is_overwrite=>is_overwrite, :folder=>folder})
      expect(result.saved_file).not_to be_empty
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'save_as vstm test' do
    it "should work" do
      folder =$storageTestFOLDER
      is_overwrite = true
     
      save_as_request=AsposeDiagramCloud::SaveOptionsRequest.new
      save_as_request.file_name="FileSaveAs.vstm"
      save_as_request.folder=folder

      save_options=AsposeDiagramCloud::DiagramSaveOptions.new
      save_options.default_font="Times New Roman"
      
      save_as_request.save_options=save_options

      result=$diagramApi.save_as("FileUpload.vdx",save_as_request,{:is_overwrite=>is_overwrite, :folder=>folder})
      expect(result.saved_file).not_to be_empty
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'save_as svg test' do
    it "should work" do
      folder =$storageTestFOLDER
      is_overwrite = true
     
      save_as_request=AsposeDiagramCloud::SaveOptionsRequest.new
      save_as_request.file_name="FileSaveAs.svg"
      save_as_request.folder=folder

      save_options=AsposeDiagramCloud::SVGSaveOptions.new
      save_options.quality=100
      
      save_as_request.save_options=save_options

      result=$diagramApi.save_as("FileUpload.vdx",save_as_request,{:is_overwrite=>is_overwrite, :folder=>folder})
      expect(result.saved_file).not_to be_empty
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'save_as swf test' do
    it "should work" do
      folder =$storageTestFOLDER
      is_overwrite = true
     
      save_as_request=AsposeDiagramCloud::SaveOptionsRequest.new
      save_as_request.file_name="FileSaveAs.swf"
      save_as_request.folder=folder

      save_options=AsposeDiagramCloud::SWFSaveOptions.new
      save_options.save_foreground_pages_only=true
      
      save_as_request.save_options=save_options

      result=$diagramApi.save_as("FileUpload.vdx",save_as_request,{:is_overwrite=>is_overwrite, :folder=>folder})
      expect(result.saved_file).not_to be_empty
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'save_as html test' do
    it "should work" do
      folder =$storageTestFOLDER
      is_overwrite = true
     
      save_as_request=AsposeDiagramCloud::SaveOptionsRequest.new
      save_as_request.file_name="FileSaveAs.html"
      save_as_request.folder=folder

      save_options=AsposeDiagramCloud::HTMLSaveOptions.new
      save_options.title="Save as HTML Test"
      
      save_as_request.save_options=save_options

      result=$diagramApi.save_as("FileUpload.vdx",save_as_request,{:is_overwrite=>is_overwrite, :folder=>folder})

      expect(result.saved_file).not_to be_empty
      expect(result.additionals).not_to be_empty
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'save_as xps test' do
    it "should work" do
      folder =$storageTestFOLDER
      is_overwrite = true
     
      save_as_request=AsposeDiagramCloud::SaveOptionsRequest.new
      save_as_request.file_name="FileSaveAs.xps"
      save_as_request.folder=folder

      save_options=AsposeDiagramCloud::XPSSaveOptions.new
      save_options.save_foreground_pages_only=true
      
      save_as_request.save_options=save_options

      result=$diagramApi.save_as("FileUpload.vdx",save_as_request,{:is_overwrite=>is_overwrite, :folder=>folder})
      expect(result.saved_file).not_to be_empty
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
